// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomainNHibernateAggregates.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Specialization.NHibernate;
using NHibernate;
using Spring.Transaction.Interceptor;

namespace Dddml.Wms.Domain.NHibernate
{

	public class OrganizationApplicationService : OrganizationApplicationServiceBase
	{

		private IEventStore _eventStore;

		protected override IEventStore EventStore
		{
			get
			{
				return _eventStore;
			}
		}

		private IOrganizationStateRepository _stateRepository;

		protected override IOrganizationStateRepository StateRepository
		{
			get
			{
				return _stateRepository;
			}
		}

		public OrganizationApplicationService(IEventStore eventStore, IOrganizationStateRepository stateRepository)
		{
			this._eventStore = eventStore;
			this._stateRepository = stateRepository;
		}

		public override IEventStoreAggregateId ToEventStoreAaggregateId(string aggregateId)
		{
			return new EventStoreAggregateId(aggregateId);
		}

		public override IOrganizationAggregate GetOrganizationAggregate(IOrganizationState state)
		{
			return new OrganizationAggregate(state);
		}

	}

}

