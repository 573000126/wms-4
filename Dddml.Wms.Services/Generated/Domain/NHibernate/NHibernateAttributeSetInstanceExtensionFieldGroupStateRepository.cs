// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomainNHibernateAggregates.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Domain;

using Dddml.Wms.Specialization;
using Dddml.Wms.Specialization.NHibernate;
using NHibernate;
using Spring.Transaction.Interceptor;

namespace Dddml.Wms.Domain.NHibernate
{

	public class NHibernateAttributeSetInstanceExtensionFieldGroupStateRepository : IAttributeSetInstanceExtensionFieldGroupStateRepository
	{
		public ISessionFactory SessionFactory { get; set; }

		protected ISession CurrentSession {
			get { return this.SessionFactory.GetCurrentSession (); }
		}

		public NHibernateAttributeSetInstanceExtensionFieldGroupStateRepository ()
		{
		}

		[Transaction (ReadOnly = true)]
		public IAttributeSetInstanceExtensionFieldGroupState Get (string id)
		{
			IAttributeSetInstanceExtensionFieldGroupState state = CurrentSession.Get<AttributeSetInstanceExtensionFieldGroupState> (id);
			if (state == null) {
				state = new AttributeSetInstanceExtensionFieldGroupState ();
				(state as AttributeSetInstanceExtensionFieldGroupState).Id = id;
			}
			return state;
		}

        [Transaction(ReadOnly = true)]
        public IEnumerable<IAttributeSetInstanceExtensionFieldGroupState> GetAll(int firstResult, int maxResults)
        {
            var criteria = CurrentSession.CreateCriteria<AttributeSetInstanceExtensionFieldGroupState>();
            criteria.SetFirstResult(firstResult);
            criteria.SetMaxResults(maxResults);
            return criteria.List<AttributeSetInstanceExtensionFieldGroupState>();
        }

		[Transaction]
		public void Save (IAttributeSetInstanceExtensionFieldGroupState state)
		{
			CurrentSession.SaveOrUpdate (state);

			var saveable = state as ISaveable;
			if (saveable != null) {
				saveable.Save ();
			}
		}
	}
}

