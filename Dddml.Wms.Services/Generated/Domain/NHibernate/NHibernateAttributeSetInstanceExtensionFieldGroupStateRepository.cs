// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomainNHibernateAggregates.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Domain;

using Dddml.Wms.Specialization;
using Dddml.Wms.Specialization.NHibernate;
using NHibernate;
using NHibernate.Criterion;
using Spring.Transaction.Interceptor;

namespace Dddml.Wms.Domain.NHibernate
{

	public class NHibernateAttributeSetInstanceExtensionFieldGroupStateRepository : IAttributeSetInstanceExtensionFieldGroupStateRepository
	{
		public ISessionFactory SessionFactory { get; set; }

		protected ISession CurrentSession {
			get { return this.SessionFactory.GetCurrentSession (); }
		}

		public NHibernateAttributeSetInstanceExtensionFieldGroupStateRepository ()
		{
		}

		[Transaction (ReadOnly = true)]
		public IAttributeSetInstanceExtensionFieldGroupState Get (string id)
		{
			IAttributeSetInstanceExtensionFieldGroupState state = CurrentSession.Get<AttributeSetInstanceExtensionFieldGroupState> (id);
			if (state == null) {
				state = new AttributeSetInstanceExtensionFieldGroupState ();
				(state as AttributeSetInstanceExtensionFieldGroupState).Id = id;
			}
			return state;
		}

        [Transaction(ReadOnly = true)]
        public IEnumerable<IAttributeSetInstanceExtensionFieldGroupState> GetAll(int firstResult, int maxResults)
        {
            var criteria = CurrentSession.CreateCriteria<AttributeSetInstanceExtensionFieldGroupState>();
            criteria.SetFirstResult(firstResult);
            criteria.SetMaxResults(maxResults);
            return criteria.List<AttributeSetInstanceExtensionFieldGroupState>();
        }

		[Transaction]
		public void Save (IAttributeSetInstanceExtensionFieldGroupState state)
		{
			CurrentSession.SaveOrUpdate (state);

			var saveable = state as ISaveable;
			if (saveable != null) {
				saveable.Save ();
			}
		}

        [Transaction(ReadOnly = true)]
        public virtual IEnumerable<IAttributeSetInstanceExtensionFieldGroupState> Get(IDictionary<string, object> filter, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue)
        {

            var criteria = CurrentSession.CreateCriteria<AttributeSetInstanceExtensionFieldGroupState>();

            if (filter != null)
            {
                SetCriteriaFilter(criteria, filter);
            }
            if (orders != null)
            {
                SetCriteriaOrders(criteria, orders);
            }

            criteria.SetFirstResult(firstResult);
            criteria.SetMaxResults(maxResults);
            return criteria.List<AttributeSetInstanceExtensionFieldGroupState>();
        }


        protected void SetCriteriaFilter(ICriteria criteria, IDictionary<string, object> filter)
        {
            foreach (KeyValuePair<string, object> p in filter)
            {
                SetCriteriaFilterPair(criteria, p);
            }
        }

        protected void SetCriteriaFilterPair(ICriteria criteria, KeyValuePair<string, object> filterPair)
        {
            if (filterPair.Value == null)
            {
                criteria.Add(Expression.IsNull(filterPair.Key));
            }
            else
            {
                criteria.Add(Expression.Eq(filterPair.Key, filterPair.Value));
            }
        }

        protected void SetCriteriaOrders(ICriteria criteria, IList<string> orders)
        {
            foreach (var order in orders)
            {
                bool isDesc = order.StartsWith("-");
                var pName = isDesc ? order.Substring(1) : order;
                criteria.AddOrder(isDesc ? Order.Desc(pName) : Order.Asc(pName));
            }
        }

	}
}

