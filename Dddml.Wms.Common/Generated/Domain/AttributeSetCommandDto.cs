// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomainAggregates.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Domain;

using Dddml.Wms.Specialization;

namespace Dddml.Wms.Domain
{

	public abstract class AttributeSetCommandDtoBase : ICommandDto, ICreateAttributeSet, IMergePatchAttributeSet, IDeleteAttributeSet
	{

		string IAggregateCommand<string, long>.AggregateId
		{
			get
			{
				return ((ICreateOrMergePatchOrDeleteAttributeSet)this).AttributeSetId;
			}
		}


		long IAggregateCommand<string, long>.AggregateVersion
		{
			get
			{
				return this.Version;
			}
		}

		public virtual long Version { get; set; }

		public virtual string RequesterId { get; set; }

		public virtual string CommandId { get; set; }

        object ICommand.RequesterId
        {
            get { return this.RequesterId; }
            set { this.RequesterId = (string)value; }
        }

        string ICommand.CommandId
        {
            get { return this.CommandId; }
            set { this.CommandId = value; }
        }

		public virtual string AttributeSetId { get; set; }

		public virtual string Name { get; set; }

		public virtual string OrganizationId { get; set; }

		public virtual string Description { get; set; }

		public virtual string SerialNumberAttributeId { get; set; }

		public virtual string LotAttributeId { get; set; }

		public virtual string ReferenceId { get; set; }

		public virtual bool? Active { get; set; }

		public virtual bool? IsPropertyNameRemoved { get; set; }

        bool IMergePatchAttributeSet.IsPropertyNameRemoved
        {
            get
            {
                var b = this.IsPropertyNameRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyNameRemoved = value;
            }
        }

		public virtual bool? IsPropertyOrganizationIdRemoved { get; set; }

        bool IMergePatchAttributeSet.IsPropertyOrganizationIdRemoved
        {
            get
            {
                var b = this.IsPropertyOrganizationIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyOrganizationIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyDescriptionRemoved { get; set; }

        bool IMergePatchAttributeSet.IsPropertyDescriptionRemoved
        {
            get
            {
                var b = this.IsPropertyDescriptionRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyDescriptionRemoved = value;
            }
        }

		public virtual bool? IsPropertySerialNumberAttributeIdRemoved { get; set; }

        bool IMergePatchAttributeSet.IsPropertySerialNumberAttributeIdRemoved
        {
            get
            {
                var b = this.IsPropertySerialNumberAttributeIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertySerialNumberAttributeIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyLotAttributeIdRemoved { get; set; }

        bool IMergePatchAttributeSet.IsPropertyLotAttributeIdRemoved
        {
            get
            {
                var b = this.IsPropertyLotAttributeIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyLotAttributeIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyReferenceIdRemoved { get; set; }

        bool IMergePatchAttributeSet.IsPropertyReferenceIdRemoved
        {
            get
            {
                var b = this.IsPropertyReferenceIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyReferenceIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyActiveRemoved { get; set; }

        bool IMergePatchAttributeSet.IsPropertyActiveRemoved
        {
            get
            {
                var b = this.IsPropertyActiveRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyActiveRemoved = value;
            }
        }

        ICreateAttributeUseCommands ICreateAttributeSet.AttributeUses
        {
            get
            {
                return this._attributeUses;
            }
        }

        IAttributeUseCommands IMergePatchAttributeSet.AttributeUseCommands
        {
            get
            {
                return this._attributeUses;
            }
        }

        public virtual CreateAttributeUseDto NewCreateAttributeUse()
        {
            var c = new CreateAttributeUseDto();
            c.AttributeSetId = this.AttributeSetId;

            return c;
        }

        ICreateAttributeUse ICreateAttributeSet.NewCreateAttributeUse()
        {
            return this.NewCreateAttributeUse();
        }

        ICreateAttributeUse IMergePatchAttributeSet.NewCreateAttributeUse()
        {
            return this.NewCreateAttributeUse();
        }

        public virtual MergePatchAttributeUseDto NewMergePatchAttributeUse()
        {
            var c = new MergePatchAttributeUseDto();
            c.AttributeSetId = this.AttributeSetId;

            return c;
        }

        IMergePatchAttributeUse IMergePatchAttributeSet.NewMergePatchAttributeUse()
        {
            return this.NewMergePatchAttributeUse();
        }

        public virtual RemoveAttributeUseDto NewRemoveAttributeUse()
        {
            var c = new RemoveAttributeUseDto();
            c.AttributeSetId = this.AttributeSetId;

            return c;
        }

        IRemoveAttributeUse IMergePatchAttributeSet.NewRemoveAttributeUse()
        {
            return this.NewRemoveAttributeUse();
        }

        private CreateOrMergePatchOrRemoveAttributeUseDtos _attributeUses = new CreateOrMergePatchOrRemoveAttributeUseDtos();

        public virtual CreateOrMergePatchOrRemoveAttributeUseDto[] AttributeUses
        {
            get
            {
                return _attributeUses.ToArray();
            }
            set
            {
                _attributeUses.Clear();
                _attributeUses.AddRange(value);
            }
        }


        // //////////////////////////////////////////////
/*
        private IAttributeSetCommand _innerCommand;

        internal ICommand ToCommand()
        {
            //if (this._innerCommand != null)
            //{
            //    return this._innerCommand;
            //}
            var cmdType = GetCommandType();
            if (cmdType == CommandType.Create)
            {
                var cmd = ToCreateAttributeSet();
                this._innerCommand = cmd;
            }
            else if (cmdType == CommandType.MergePatch)
            {
                var cmd = ToMergePatchAttributeSet();
                this._innerCommand = cmd;
            }
            else if (cmdType == CommandType.Delete)
            {
                var cmd = ToDeleteAttributeSet();
                this._innerCommand = cmd;
            }
            else
            {
                throw DomainError.Named("invalidCommandType", String.Format("Invalid command type: {0}", cmdType));
            }
            return this._innerCommand;
        }

        internal DeleteAttributeSet ToDeleteAttributeSet()
        {
            var cmd = new DeleteAttributeSet();
            cmd.CommandId = this.CommandId;
            cmd.RequesterId = this.RequesterId;

            cmd.AttributeSetId = ((ICreateOrMergePatchOrDeleteAttributeSet)this).AttributeSetId;
            cmd.Version = this.Version;

            return cmd;
        }

        internal MergePatchAttributeSet ToMergePatchAttributeSet()
        {
            var cmd = new MergePatchAttributeSet();
            cmd.CommandId = this.CommandId;
            cmd.RequesterId = this.RequesterId;

            cmd.Version = this.Version;

            cmd.AttributeSetId = ((ICreateOrMergePatchOrDeleteAttributeSet)this).AttributeSetId;
            cmd.Name = ((ICreateOrMergePatchOrDeleteAttributeSet)this).Name;
            cmd.OrganizationId = ((ICreateOrMergePatchOrDeleteAttributeSet)this).OrganizationId;
            cmd.Description = ((ICreateOrMergePatchOrDeleteAttributeSet)this).Description;
            cmd.SerialNumberAttributeId = ((ICreateOrMergePatchOrDeleteAttributeSet)this).SerialNumberAttributeId;
            cmd.LotAttributeId = ((ICreateOrMergePatchOrDeleteAttributeSet)this).LotAttributeId;
            cmd.ReferenceId = ((ICreateOrMergePatchOrDeleteAttributeSet)this).ReferenceId;
            cmd.Active = ((ICreateOrMergePatchOrDeleteAttributeSet)this).Active;
            
            cmd.IsPropertyNameRemoved = (this as IMergePatchAttributeSet).IsPropertyNameRemoved;
            cmd.IsPropertyOrganizationIdRemoved = (this as IMergePatchAttributeSet).IsPropertyOrganizationIdRemoved;
            cmd.IsPropertyDescriptionRemoved = (this as IMergePatchAttributeSet).IsPropertyDescriptionRemoved;
            cmd.IsPropertySerialNumberAttributeIdRemoved = (this as IMergePatchAttributeSet).IsPropertySerialNumberAttributeIdRemoved;
            cmd.IsPropertyLotAttributeIdRemoved = (this as IMergePatchAttributeSet).IsPropertyLotAttributeIdRemoved;
            cmd.IsPropertyReferenceIdRemoved = (this as IMergePatchAttributeSet).IsPropertyReferenceIdRemoved;
            cmd.IsPropertyActiveRemoved = (this as IMergePatchAttributeSet).IsPropertyActiveRemoved;
            foreach (var d in (IEnumerable<CreateOrMergePatchOrRemoveAttributeUseDto>)_attributeUses)
            {
                var c = (IAttributeUseCommand)d.ToCommand();
                cmd.AttributeUseCommands.Add(c);
            }
            return cmd;
        }

        internal CreateAttributeSet ToCreateAttributeSet()
        {
            var cmd = new CreateAttributeSet();
            cmd.CommandId = this.CommandId;
            cmd.RequesterId = this.RequesterId;

            cmd.Version = this.Version;

            cmd.AttributeSetId = ((ICreateOrMergePatchOrDeleteAttributeSet)this).AttributeSetId;
            cmd.Name = ((ICreateOrMergePatchOrDeleteAttributeSet)this).Name;
            cmd.OrganizationId = ((ICreateOrMergePatchOrDeleteAttributeSet)this).OrganizationId;
            cmd.Description = ((ICreateOrMergePatchOrDeleteAttributeSet)this).Description;
            cmd.SerialNumberAttributeId = ((ICreateOrMergePatchOrDeleteAttributeSet)this).SerialNumberAttributeId;
            cmd.LotAttributeId = ((ICreateOrMergePatchOrDeleteAttributeSet)this).LotAttributeId;
            cmd.ReferenceId = ((ICreateOrMergePatchOrDeleteAttributeSet)this).ReferenceId;
            cmd.Active = ((ICreateOrMergePatchOrDeleteAttributeSet)this).Active;
            foreach (var d in (IEnumerable<CreateOrMergePatchOrRemoveAttributeUseDto>)_attributeUses)
            {
                var c = d.ToCreateAttributeUse();
                cmd.AttributeUses.Add(c);
            }
            return cmd;
        }
*/
        // //////////////////////////////////////////////////

        string ICommandDto.CommandType 
        {
            get { return this.GetCommandType(); }
        }

        protected abstract string GetCommandType();

	}


    public class CreateOrMergePatchOrDeleteAttributeSetDto : AttributeSetCommandDtoBase
    {
        private string _commandType;

        public virtual string CommandType
        {
            get { return _commandType; }
            set { _commandType = value; }
        }

        protected override string GetCommandType()
        {
            return this._commandType;
        }

    }



	public class CreateAttributeSetDto : CreateOrMergePatchOrDeleteAttributeSetDto
	{

        public override string CommandType
        {
            get { return this.GetCommandType(); }
            set { 
				// do nothing
            }
        }

        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Create;
        }

	}


	public class MergePatchAttributeSetDto : CreateOrMergePatchOrDeleteAttributeSetDto
	{

        public override string CommandType
        {
            get { return this.GetCommandType(); }
            set { 
				// do nothing
            }
        }

        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.MergePatch;
        }

	}

	public class DeleteAttributeSetDto : CreateOrMergePatchOrDeleteAttributeSetDto
	{
        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Delete;
        }


        public override string CommandType
        {
            get { return this.GetCommandType(); }
            set { 
				// do nothing
            }
        }

	}





}

