// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomainAggregates.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;

namespace Dddml.Wms.Domain
{

	public static partial class PermissionStateExtensions
	{

        public static IPermissionCommand ToCreateOrMergePatchPermission(this PermissionState state)
        {
            bool bUnsaved = ((IPermissionState)state).IsUnsaved;
            if (bUnsaved)
            {
                return state.ToCreatePermission();
            }
            else 
            {
                return state.ToMergePatchPermission();
            }
        }

        public static DeletePermission ToDeletePermission(this PermissionState state)
        {
            var cmd = new DeletePermission();
            cmd.PermissionId = state.PermissionId;
            cmd.Version = state.Version;

            return cmd;
        }

        public static MergePatchPermission ToMergePatchPermission(this PermissionState state)
        {
            var cmd = new MergePatchPermission();

            cmd.Version = state.Version;

            cmd.PermissionId = state.PermissionId;
            cmd.Name = state.Name;
            cmd.ParentPermissionId = state.ParentPermissionId;
            cmd.Description = state.Description;
            cmd.Active = state.Active;
            
            if (state.Name == null) { cmd.IsPropertyNameRemoved = true; }
            if (state.ParentPermissionId == null) { cmd.IsPropertyParentPermissionIdRemoved = true; }
            if (state.Description == null) { cmd.IsPropertyDescriptionRemoved = true; }
            return cmd;
        }

        public static CreatePermission ToCreatePermission(this PermissionState state)
        {
            var cmd = new CreatePermission();

            cmd.Version = state.Version;

            cmd.PermissionId = state.PermissionId;
            cmd.Name = state.Name;
            cmd.ParentPermissionId = state.ParentPermissionId;
            cmd.Description = state.Description;
            cmd.Active = state.Active;
            return cmd;
        }
		

	}

}

