// <autogenerated>
//   This file was generated by T4 code generator GenerateBoundedContextDomainAggregates.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Domain;

using Dddml.Wms.Specialization;

namespace Dddml.Wms.Domain
{

	public abstract class AttributeSetInstanceExtensionFieldGroupStateEventBase : AttributeSetInstanceExtensionFieldGroupStateProperties, IAttributeSetInstanceExtensionFieldGroupStateEvent
	{

		public virtual AttributeSetInstanceExtensionFieldGroupStateEventId StateEventId { get; set; }

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

        public virtual string CommandId { get; set; }

		AttributeSetInstanceExtensionFieldGroupStateEventId IGlobalIdentity<AttributeSetInstanceExtensionFieldGroupStateEventId>.GlobalId {
			get {
				return this.StateEventId;
			}
		}

        public virtual bool StateEventReadOnly { get; set; }

        bool IAttributeSetInstanceExtensionFieldGroupStateEvent.ReadOnly
        {
            get
            {
                return this.StateEventReadOnly;
            }
            set
            {
                this.StateEventReadOnly = value;
            }
        }


		public override string Id {
			get {
				return StateEventId.Id;//EntityBase.Aggregate.GetStateEventIdPropertyIdName()
			}
			set {
				throw new NotSupportedException ();
			}
		}

		public virtual long Version {
			get {
				return StateEventId.Version;//EntityBase.Aggregate.GetStateEventIdPropertyVersionName()
			}
			set {
				throw new NotSupportedException ();
			}
		}


		string ICreated<string>.CreatedBy {
			get {
				return this.CreatedBy;
			}
		}

		DateTime ICreated<string>.CreatedAt {
			get {
				return this.CreatedAt;
			}
		}

        protected AttributeSetInstanceExtensionFieldGroupStateEventBase()
        {
        }

        protected AttributeSetInstanceExtensionFieldGroupStateEventBase(AttributeSetInstanceExtensionFieldGroupStateEventId stateEventId)
        {
            this.StateEventId = stateEventId;
        }

        protected AttributeSetInstanceExtensionFieldStateEventId NewAttributeSetInstanceExtensionFieldStateEventId(string index)
        {
            var stateEventId = new AttributeSetInstanceExtensionFieldStateEventId(this.StateEventId.Id, index, this.StateEventId.Version);
            return stateEventId;
        }

		protected void ThrowOnInconsistentEventIds(IAttributeSetInstanceExtensionFieldStateEvent e)
		{
			if (this.StateEventId.Id != e.StateEventId.GroupId) 
			{ 
				DomainError.Named("inconsistentEventIds", "Outer Id Id {0} but inner id GroupId {1}", 
					this.StateEventId.Id, e.StateEventId.GroupId);
			}
		}



	}

	public class AttributeSetInstanceExtensionFieldGroupStateCreated : AttributeSetInstanceExtensionFieldGroupStateEventBase, IAttributeSetInstanceExtensionFieldGroupStateCreated, ISaveable
	{
		public AttributeSetInstanceExtensionFieldGroupStateCreated ()
		{
		}

		public AttributeSetInstanceExtensionFieldGroupStateCreated (AttributeSetInstanceExtensionFieldGroupStateEventId stateEventId) : base(stateEventId)
		{
		}

		private Dictionary<AttributeSetInstanceExtensionFieldStateEventId, IAttributeSetInstanceExtensionFieldStateCreated> _attributeSetInstanceExtensionFieldEvents = new Dictionary<AttributeSetInstanceExtensionFieldStateEventId, IAttributeSetInstanceExtensionFieldStateCreated>();
		
		public virtual IEnumerable<IAttributeSetInstanceExtensionFieldStateCreated> AttributeSetInstanceExtensionFieldEvents {
			get {
				return this._attributeSetInstanceExtensionFieldEvents.Values;
			}
		}
	
		public virtual void AddAttributeSetInstanceExtensionFieldEvent(IAttributeSetInstanceExtensionFieldStateCreated e)
		{
			ThrowOnInconsistentEventIds(e);
			this._attributeSetInstanceExtensionFieldEvents[e.StateEventId] = e;
		}

        public virtual AttributeSetInstanceExtensionFieldStateCreated NewAttributeSetInstanceExtensionFieldStateCreated(string index)
        {
            var stateEvent = new AttributeSetInstanceExtensionFieldStateCreated(NewAttributeSetInstanceExtensionFieldStateEventId(index));
            return stateEvent;
        }

		public virtual void Save ()
		{
			foreach (IAttributeSetInstanceExtensionFieldStateCreated e in this.AttributeSetInstanceExtensionFieldEvents) {
				(ApplicationContext.Current["AttributeSetInstanceExtensionFieldStateEventDao"] as IAttributeSetInstanceExtensionFieldStateEventDao).Save(e);
			}
		}

	}


	public class AttributeSetInstanceExtensionFieldGroupStateMergePatched : AttributeSetInstanceExtensionFieldGroupStateEventBase, IAttributeSetInstanceExtensionFieldGroupStateMergePatched, ISaveable
	{
		public virtual bool IsPropertyFieldTypeRemoved { get; set; }

		public virtual bool IsPropertyFieldLengthRemoved { get; set; }

		public virtual bool IsPropertyFieldCountRemoved { get; set; }

		public virtual bool IsPropertyNameFormatRemoved { get; set; }

		public virtual bool IsPropertyDescriptionRemoved { get; set; }

		public virtual bool IsPropertyActiveRemoved { get; set; }


		public AttributeSetInstanceExtensionFieldGroupStateMergePatched ()
		{
		}

		public AttributeSetInstanceExtensionFieldGroupStateMergePatched (AttributeSetInstanceExtensionFieldGroupStateEventId stateEventId) : base(stateEventId)
		{
		}

		private Dictionary<AttributeSetInstanceExtensionFieldStateEventId, IAttributeSetInstanceExtensionFieldStateEvent> _attributeSetInstanceExtensionFieldEvents = new Dictionary<AttributeSetInstanceExtensionFieldStateEventId, IAttributeSetInstanceExtensionFieldStateEvent>();
		
		public virtual IEnumerable<IAttributeSetInstanceExtensionFieldStateEvent> AttributeSetInstanceExtensionFieldEvents {
			get {
				return this._attributeSetInstanceExtensionFieldEvents.Values;
			}
		}
	
		public virtual void AddAttributeSetInstanceExtensionFieldEvent(IAttributeSetInstanceExtensionFieldStateEvent e)
		{
			ThrowOnInconsistentEventIds(e);
			this._attributeSetInstanceExtensionFieldEvents[e.StateEventId] = e;
		}

        public virtual AttributeSetInstanceExtensionFieldStateCreated NewAttributeSetInstanceExtensionFieldStateCreated(string index)
        {
            var stateEvent = new AttributeSetInstanceExtensionFieldStateCreated(NewAttributeSetInstanceExtensionFieldStateEventId(index));
            return stateEvent;
        }

        public virtual AttributeSetInstanceExtensionFieldStateMergePatched NewAttributeSetInstanceExtensionFieldStateMergePatched(string index)
        {
            var stateEvent = new AttributeSetInstanceExtensionFieldStateMergePatched(NewAttributeSetInstanceExtensionFieldStateEventId(index));
            return stateEvent;
        }

        public virtual AttributeSetInstanceExtensionFieldStateRemoved NewAttributeSetInstanceExtensionFieldStateRemoved(string index)
        {
            var stateEvent = new AttributeSetInstanceExtensionFieldStateRemoved(NewAttributeSetInstanceExtensionFieldStateEventId(index));
            return stateEvent;
        }

		public virtual void Save ()
		{
			foreach (IAttributeSetInstanceExtensionFieldStateEvent e in this.AttributeSetInstanceExtensionFieldEvents) {
				(ApplicationContext.Current["AttributeSetInstanceExtensionFieldStateEventDao"] as IAttributeSetInstanceExtensionFieldStateEventDao).Save(e);
			}
		}


	}


	public class AttributeSetInstanceExtensionFieldGroupStateDeleted : AttributeSetInstanceExtensionFieldGroupStateEventBase, IAttributeSetInstanceExtensionFieldGroupStateDeleted
	{
		public AttributeSetInstanceExtensionFieldGroupStateDeleted ()
		{
		}

		public AttributeSetInstanceExtensionFieldGroupStateDeleted (AttributeSetInstanceExtensionFieldGroupStateEventId stateEventId) : base(stateEventId)
		{
		}

	}



}

